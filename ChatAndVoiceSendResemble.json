{
  "name": "ChatAndVoiceSendResemble",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        620,
        -100
      ],
      "id": "0127300a-6d5e-49e3-bbde-9fc8dc660583",
      "name": "No Operation, do nothing1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        620,
        420
      ],
      "id": "238f2816-c93c-4bb7-a679-d71cb1eeba79",
      "name": "No Operation, do nothing3"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        840,
        -20
      ],
      "id": "f2f34d80-e668-4ea6-a35a-b10b3378d2f8",
      "name": "No Operation, do nothing2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4d6395c2-a0b8-4aa3-a6e2-7b1f4e9aadea",
              "name": "concat_message",
              "value": "={{ $json.message.map(m => JSON.parse(m).message).filter(msg => msg && msg.trim().length > 0).join('\\n') }}",
              "type": "string"
            },
            {
              "id": "sender-final",
              "name": "sender",
              "value": "={{ $('Buffer').item.json.sender }}",
              "type": "string"
            },
            {
              "id": "instance-final",
              "name": "instance",
              "value": "={{ $('Buffer').item.json.instance }}",
              "type": "string"
            },
            {
              "id": "34c8053e-60c0-464d-b590-50b55393ad99",
              "name": "data_time",
              "value": "={{ $json.message.map(m => JSON.parse(m).date_time)[0] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2840,
        220
      ],
      "id": "9639f429-9cc4-40be-b1e2-e9e883355157",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Buffer').item.json.sender }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2620,
        220
      ],
      "id": "2f8872de-f2ec-464d-a449-37e766226759",
      "name": "Delete Bufer",
      "credentials": {
        "redis": {
          "id": "HBZtjEwzw7Xu4Gm2",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2620,
        80
      ],
      "id": "9a96a3c3-8f3c-4e25-9053-3a56b40ec71b",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "amount": 15
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2280,
        500
      ],
      "id": "031f1e14-b62c-4997-8416-3fda40349b6c",
      "name": "Wait",
      "webhookId": "af103ce3-c0d9-4f2a-a094-75cc30056d01"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ JSON.parse($json.message?.last() || '{}').sessionId }}",
                    "rightValue": "={{ $('Buffer').item.json.sessionid }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    },
                    "id": "e78445eb-0694-4818-a7dd-f3877a96b527"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Ignorar"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d9f25adc-6bf4-4e1b-83f1-04991279c52b",
                    "leftValue": "={{ JSON.parse($json.message?.last() || '{}').date_time }}",
                    "rightValue": "={{ $now.minus(15, 'second').setZone('America/Bogota') }}",
                    "operator": {
                      "type": "dateTime",
                      "operation": "before"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Continuar"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "Esperar"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2400,
        220
      ],
      "id": "62949c33-d965-40c3-85f6-8dda667f89d5",
      "name": "Switch"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "message",
        "key": "={{ $('Buffer').item.json.sender }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2180,
        220
      ],
      "id": "a0bec317-060c-489e-a0f4-94cd94688fb3",
      "name": "Get Buffer Data",
      "credentials": {
        "redis": {
          "id": "HBZtjEwzw7Xu4Gm2",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $json.sender }}",
        "messageData": "={{ $json.final_message && $json.final_message.trim().length > 0 ? JSON.stringify({\n  'message': $json.final_message.trim(),\n  'sessionId': $json.sessionid,\n  'date_time': $json.data_time,\n  'number': $json.sender.split('@')[0]\n}) : JSON.stringify({\n  'message': 'Mensaje procesado',\n  'sessionId': $json.sessionid,\n  'date_time': $json.data_time,\n  'number': $json.sender.split('@')[0]\n}) }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1960,
        220
      ],
      "id": "323f11c3-cb65-489d-803b-6b6590242748",
      "name": "Buffer",
      "credentials": {
        "redis": {
          "id": "HBZtjEwzw7Xu4Gm2",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        1720,
        220
      ],
      "id": "f038f8a6-c0f4-461d-8382-538c37e1c421",
      "name": "Merge Messages"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "sender-text",
              "name": "sender",
              "value": "={{ $('Data msg extraction').item.json.Sender }}",
              "type": "string"
            },
            {
              "id": "type-text",
              "name": "message_type",
              "value": "text",
              "type": "string"
            },
            {
              "id": "final-message-text",
              "name": "final_message",
              "value": "={{ $json.final_message }}",
              "type": "string"
            },
            {
              "id": "instance-text-processed",
              "name": "instance",
              "value": "={{ $json.instance }}",
              "type": "string"
            },
            {
              "id": "604b65ff-f0a9-4aff-8972-f2cbfa0ad1be",
              "name": "sessionid",
              "value": "={{ $json.sessionid }}",
              "type": "string"
            },
            {
              "id": "b5f29f61-58ea-4276-9ac8-d5be97b9dbc5",
              "name": "data_time",
              "value": "={{ $json.data_time }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1380,
        240
      ],
      "id": "b5f861ee-1a96-469f-a74d-baf10fba45ae",
      "name": "Text Processed"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "transcription-assignment",
              "name": "final_message",
              "value": "={{ $json.text }}",
              "type": "string"
            },
            {
              "id": "sender-assignment",
              "name": "sender",
              "value": "={{ $('Data msg extraction').item.json.Sender }}",
              "type": "string"
            },
            {
              "id": "type-assignment",
              "name": "message_type",
              "value": "voice_transcribed",
              "type": "string"
            },
            {
              "id": "instance-voice",
              "name": "instance",
              "value": "={{ $('Data msg extraction').item.json.instance }}",
              "type": "string"
            },
            {
              "id": "27f9fc67-c622-4efe-afdb-cb962b6c9b91",
              "name": "sessionid",
              "value": "={{ $('Check Message Type').item.json.sessionid }}",
              "type": "string"
            },
            {
              "id": "6b05ec28-3bcb-4ac5-a2e7-8110515a4f2e",
              "name": "data_time",
              "value": "={{ $('Check Message Type').item.json.data_time }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1500,
        80
      ],
      "id": "0679ae51-e97a-4001-bc80-8ae8364e95eb",
      "name": "Voice Transcribed"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {
          "language": "es",
          "temperature": 0
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1240,
        80
      ],
      "id": "44999696-f160-4c95-a2f5-2dff0a2386dc",
      "name": "Transcribe a recording",
      "credentials": {
        "openAiApi": {
          "id": "4I5hY4XwoALE8VJS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "436cccc7-5459-4e4a-9d67-44817408c453",
              "name": "final_message",
              "value": "={{ $json.text_message }}",
              "type": "string"
            },
            {
              "id": "sender-field",
              "name": "sender",
              "value": "={{ $('Data msg extraction').item.json.Sender }}",
              "type": "string"
            },
            {
              "id": "instance-text",
              "name": "instance",
              "value": "={{ $('Data msg extraction').item.json.instance }}",
              "type": "string"
            },
            {
              "id": "b3884663-a59c-46ea-9844-10ecf6bb6359",
              "name": "sessionid",
              "value": "={{ $json.sessionid }}",
              "type": "string"
            },
            {
              "id": "a49a9009-b808-468f-9eb8-9dc2f49b436e",
              "name": "data_time",
              "value": "={{ $json.data_time }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1000,
        240
      ],
      "id": "161ef63d-440b-4aab-88bc-2158118e957a",
      "name": "Text Message"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "group-sender-check",
                    "leftValue": "={{ $json.Sender }}",
                    "rightValue": "-",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Group_Ignore"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "group-gus-check",
                    "leftValue": "={{ $json.Sender }}",
                    "rightValue": "@g.us",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "GroupGUS_Ignore"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "audio-message-check",
                    "leftValue": "={{ $json.message_type }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8db3c437-44d2-4342-93a8-c6dd369140b4",
                    "leftValue": "={{ $json.message_type }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e14c81d0-ac4a-4607-8b03-0bb5dbc608a6",
                    "leftValue": "={{ $json.message_type }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "imagen"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "contact-message-check",
                    "leftValue": "={{ $json.message_type }}",
                    "rightValue": "contactMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Contact_Ignore"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        280,
        160
      ],
      "id": "61c9dbf1-7fb3-4aaa-a9a0-5d4d61afa362",
      "name": "Check Message Type"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "17b95962-a1be-4f69-b1b3-77b60ea1ab29",
              "name": "Sender",
              "value": "={{ $json.body.data.key.remoteJid }}",
              "type": "string"
            },
            {
              "id": "28c3f8d5-96e9-46c6-8bc3-c3cdb67e09be",
              "name": "message_type",
              "value": "={{ $json.body.data.messageType }}",
              "type": "string"
            },
            {
              "id": "3e26eca4-56f7-465d-851f-95729f97b7c5",
              "name": "voice_message",
              "value": "={{ $json.body.data.message.base64 }}",
              "type": "string"
            },
            {
              "id": "03a7ef0f-07d9-44e5-a8e6-137fccc2a772",
              "name": "text_message",
              "value": "={{ $json.body.data.message.conversation }}",
              "type": "string"
            },
            {
              "id": "instance-field",
              "name": "instance",
              "value": "={{ $json.body.instance }}",
              "type": "string"
            },
            {
              "id": "8b77bee6-f69f-4ee1-a650-6f853869b779",
              "name": "sessionid",
              "value": "={{ $json.body.data.key.remoteJid }}",
              "type": "string"
            },
            {
              "id": "c5781775-3177-4292-a756-183a664cfdd2",
              "name": "data_time",
              "value": "={{ $json.body.data.messageTimestamp.toDateTime('s').setZone('America/Bogota') }}",
              "type": "string"
            },
            {
              "id": "0d5a0aa9-8516-4234-a6e8-1486563ed80f",
              "name": "server_url",
              "value": "={{ $json.body.server_url }}",
              "type": "string"
            },
            {
              "id": "1251e5c7-31cb-4a83-ac4f-8878b5f455c2",
              "name": "pushName",
              "value": "={{ $json.body.data.pushName }}",
              "type": "string"
            },
            {
              "id": "905a3b75-6eb0-4998-8da0-e3c3e61bd819",
              "name": "id",
              "value": "={{ $json.body.data.key.id }}",
              "type": "string"
            },
            {
              "id": "aeb845dd-9004-485d-b4d8-80cec2576a43",
              "name": "mimetypeImage",
              "value": "={{ $json.body.data.message.imageMessage.mimetype }}",
              "type": "string"
            },
            {
              "id": "6dfd34ca-66f0-4232-a2dd-e3495b501e2d",
              "name": "mimetypeAudio",
              "value": "={{ $json.body.data.message.audioMessage.mimetype }}",
              "type": "string"
            },
            {
              "id": "af8919c5-e57c-440c-9d11-60c7b1a20556",
              "name": "caption",
              "value": "={{ $json.body.data.message.imageMessage.caption }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        60,
        220
      ],
      "id": "6dbb77ad-0b3e-452f-bd47-e773b0ce4ec2",
      "name": "Data msg extraction"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "61a6cad6-29b9-4682-9ee7-da531f4e638a",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -180,
        220
      ],
      "id": "1da45b16-7c89-48af-865a-8c1a31a344a2",
      "name": "Webhook",
      "webhookId": "61a6cad6-29b9-4682-9ee7-da531f4e638a"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "validated-message",
              "name": "concat_message",
              "value": "={{ $json.concat_message && $json.concat_message.trim().length > 0 ? $json.concat_message.trim() : 'Hola' }}",
              "type": "string"
            },
            {
              "id": "sender-pass",
              "name": "sender",
              "value": "={{ $json.sender }}",
              "type": "string"
            },
            {
              "id": "instance-pass",
              "name": "instance",
              "value": "={{ $json.instance }}",
              "type": "string"
            },
            {
              "id": "8f4cd316-47b0-466e-84f4-f6d088557e90",
              "name": "data_time",
              "value": "={{ $json.data_time }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3020,
        220
      ],
      "id": "96778afb-3bbd-45f1-a40a-f05b8f8a4cb1",
      "name": "Message Validator"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "Ke9ReyD4i1jD68IH",
          "mode": "list",
          "cachedResultName": "MSG IA"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "sender_split": "={{ $json.sender }}",
            "concat_message": "={{ $json.concat_message }}",
            "instance": "={{ $('Message Validator').item.json.instance }}",
            "data_time": "={{ $json.data_time }}"
          },
          "matchingColumns": [
            "sender_split",
            "concat_message",
            "instance"
          ],
          "schema": [
            {
              "id": "sender_split",
              "displayName": "sender_split",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "concat_message",
              "displayName": "concat_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "instance",
              "displayName": "instance",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "data_time",
              "displayName": "data_time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        3320,
        220
      ],
      "name": "Call MSG IA",
      "id": "2b9d8605-c6f6-4a37-9ce6-694f2cb2effc"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Describe la Imagen",
        "inputType": "base64",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1240,
        400
      ],
      "id": "d50bf09f-2ea4-4891-b92a-551c351c1fb0",
      "name": "Analyze image",
      "credentials": {
        "openAiApi": {
          "id": "4I5hY4XwoALE8VJS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "transcription-assignment",
              "name": "final_message",
              "value": "={{ ($('Data msg extraction').item.json.caption && $('Data msg extraction').item.json.caption.trim().length > 0 ? $('Data msg extraction').item.json.caption + '\\n\\n' : '') + $json.content }}",
              "type": "string"
            },
            {
              "id": "sender-assignment",
              "name": "sender",
              "value": "={{ $('Data msg extraction').item.json.Sender }}",
              "type": "string"
            },
            {
              "id": "type-assignment",
              "name": "message_type",
              "value": "imagen_transcribed",
              "type": "string"
            },
            {
              "id": "instance-voice",
              "name": "instance",
              "value": "={{ $('Data msg extraction').item.json.instance }}",
              "type": "string"
            },
            {
              "id": "27f9fc67-c622-4efe-afdb-cb962b6c9b91",
              "name": "sessionid",
              "value": "={{ $('Check Message Type').item.json.sessionid }}",
              "type": "string"
            },
            {
              "id": "6b05ec28-3bcb-4ac5-a2e7-8110515a4f2e",
              "name": "data_time",
              "value": "={{ $('Check Message Type').item.json.data_time }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1500,
        400
      ],
      "id": "1160f943-b56d-4b2a-9f75-4fabadffb78d",
      "name": "Imagen Transcribed"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "voice_message",
        "options": {
          "mimeType": "={{ $json.mimetypeImage }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        1000,
        400
      ],
      "id": "1fd1cc2b-07ce-4fb3-9ec0-d7563877ed75",
      "name": "Convert to Imagen"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "voice_message",
        "options": {
          "mimeType": "={{ $json.mimetypeAudio }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        1000,
        80
      ],
      "id": "438ab9c1-81ed-4237-9874-d61763b8a27c",
      "name": "Convert to Audio"
    }
  ],
  "pinData": {},
  "connections": {
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Message Validator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Bufer": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Get Buffer Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete Bufer",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Buffer Data": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Buffer": {
      "main": [
        [
          {
            "node": "Get Buffer Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Messages": {
      "main": [
        [
          {
            "node": "Buffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Processed": {
      "main": [
        [
          {
            "node": "Merge Messages",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Voice Transcribed": {
      "main": [
        [
          {
            "node": "Merge Messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe a recording": {
      "main": [
        [
          {
            "node": "Voice Transcribed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Message": {
      "main": [
        [
          {
            "node": "Text Processed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Message Type": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Convert to Audio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Text Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Convert to Imagen",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data msg extraction": {
      "main": [
        [
          {
            "node": "Check Message Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Data msg extraction",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message Validator": {
      "main": [
        [
          {
            "node": "Call MSG IA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze image": {
      "main": [
        [
          {
            "node": "Imagen Transcribed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Imagen Transcribed": {
      "main": [
        [
          {
            "node": "Merge Messages",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Convert to Imagen": {
      "main": [
        [
          {
            "node": "Analyze image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to Audio": {
      "main": [
        [
          {
            "node": "Transcribe a recording",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "571d3681-d887-4f66-9d4b-2ef753b295f8",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "9b741fad69cc6219b90142a4f3a46a45de0510680dd2fdf57a5402cd3a1e0176"
  },
  "id": "OINbi3I0w7xmhqtA",
  "tags": [
    {
      "createdAt": "2025-07-08T23:54:46.199Z",
      "updatedAt": "2025-07-08T23:54:46.199Z",
      "id": "WtlktAsOhSBmH0bF",
      "name": "EDPERFUMERIA"
    }
  ]
}