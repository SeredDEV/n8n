{
  "name": "z-Api",
  "nodes": [
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message_type }}",
                    "rightValue": "audio",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "f1f4f21d-7bac-4148-8fa5-eb91e67e3f5e"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message_type }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "53ea1f96-c52a-4d1f-a00d-c0cafb1feb82"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message_type }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "b2b2b2b2-2222-3333-4444-555555555555"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message_type }}",
                    "rightValue": "button_response",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "c3c3c3c3-3333-4444-5555-666666666666"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "button"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -4032,
        0
      ],
      "id": "3c1b5264-461f-4bf0-b04a-3c64389437ec",
      "name": "Message Type Router"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "credentials-object",
              "name": "credentials",
              "value": "={{ { \"z_api_token\": $json.headers['z-api-token'], \"instance_id\": $json.body.instanceId } }}",
              "type": "object"
            },
            {
              "id": "system-object",
              "name": "system",
              "value": "={{ { \"execution_mode\": $json.executionMode, \"webhook_url\": $json.webhookUrl, \"user_agent\": $json.headers['user-agent'], \"origin_server\": $json.headers.origin, \"client_ip\": $json.headers['x-real-ip'] } }}",
              "type": "object"
            },
            {
              "id": "user-object",
              "name": "user",
              "value": "={{ { \"sender_phone\": $json.body.phone, \"connected_phone\": $json.body.connectedPhone, \"chat_name\": $json.body.chatName, \"sender_name\": $json.body.senderName, \"chat_lid\": $json.body.chatLid } }}",
              "type": "object"
            },
            {
              "id": "message-type-detector",
              "name": "message_type",
              "value": "={{ $json.body.text ? 'text' : $json.body.audio ? 'audio' : $json.body.image ? 'image' : $json.body.buttonsResponseMessage ? 'button_response' : $json.body.document ? ($json.body.document.mimeType && $json.body.document.mimeType.startsWith('audio/') ? 'audio_file' : $json.body.document.mimeType && $json.body.document.mimeType.startsWith('video/') ? 'video' : 'document') : 'unknown' }}",
              "type": "string"
            },
            {
              "id": "message-object",
              "name": "message",
              "value": "={{ { \"message_id\": $json.body.messageId, \"timestamp\": $json.body.momment, \"formatted_date\": DateTime.fromMillis($json.body.momment).toFormat('yyyy-MM-dd HH:mm:ss'), \"formatted_date_utc_minus_5\": DateTime.fromMillis($json.body.momment).setZone('UTC-5').toFormat('yyyy-MM-dd HH:mm:ss'), \"message_status\": $json.body.status, \"message_type\": ($json.body.text ? 'text' : $json.body.audio ? 'audio' : $json.body.image ? 'image' : $json.body.buttonsResponseMessage ? 'button_response' : $json.body.document ? ($json.body.document.mimeType && $json.body.document.mimeType.startsWith('audio/') ? 'audio_file' : $json.body.document.mimeType && $json.body.document.mimeType.startsWith('video/') ? 'video' : 'document') : 'unknown') } }}",
              "type": "object"
            },
            {
              "id": "content-text",
              "name": "text_content",
              "value": "={{ $json.body.text ? { \"message\": $json.body.text.message } : null }}",
              "type": "object"
            },
            {
              "id": "content-audio",
              "name": "audio_content",
              "value": "={{ $json.body.audio ? { \"audio_url\": $json.body.audio.audioUrl, \"duration_seconds\": $json.body.audio.seconds, \"mime_type\": $json.body.audio.mimeType, \"is_ptt\": $json.body.audio.ptt, \"view_once\": $json.body.audio.viewOnce, \"source\": 'audio_object' } : null }}",
              "type": "object"
            },
            {
              "id": "content-audio-file",
              "name": "audio_file_content",
              "value": "={{ ($json.body.document && $json.body.document.mimeType && $json.body.document.mimeType.startsWith('audio/')) ? { \"audio_url\": $json.body.document.documentUrl, \"file_name\": $json.body.document.fileName, \"mime_type\": $json.body.document.mimeType, \"caption\": $json.body.document.caption, \"title\": $json.body.document.title, \"source\": 'document_object' } : null }}",
              "type": "object"
            },
            {
              "id": "content-image",
              "name": "image_content",
              "value": "={{ $json.body.image ? { \"image_url\": $json.body.image.imageUrl, \"thumbnail_url\": $json.body.image.thumbnailUrl, \"caption\": $json.body.image.caption, \"mime_type\": $json.body.image.mimeType, \"view_once\": $json.body.image.viewOnce, \"width\": $json.body.image.width, \"height\": $json.body.image.height } : null }}",
              "type": "object"
            },
            {
              "id": "content-video",
              "name": "video_content",
              "value": "={{ ($json.body.document && $json.body.document.mimeType && $json.body.document.mimeType.startsWith('video/')) ? { \"video_url\": $json.body.document.documentUrl, \"file_name\": $json.body.document.fileName, \"mime_type\": $json.body.document.mimeType, \"caption\": $json.body.document.caption, \"title\": $json.body.document.title, \"source\": 'document_object' } : null }}",
              "type": "object"
            },
            {
              "id": "content-document",
              "name": "document_content",
              "value": "={{ ($json.body.document && (!$json.body.document.mimeType || (!$json.body.document.mimeType.startsWith('audio/') && !$json.body.document.mimeType.startsWith('video/')))) ? { \"document_url\": $json.body.document.documentUrl, \"file_name\": $json.body.document.fileName, \"title\": $json.body.document.title, \"caption\": $json.body.document.caption, \"mime_type\": $json.body.document.mimeType, \"page_count\": $json.body.document.pageCount } : null }}",
              "type": "object"
            },
            {
              "id": "content-button",
              "name": "button_content",
              "value": "={{ $json.body.buttonsResponseMessage ? { \"button_id\": $json.body.buttonsResponseMessage.buttonId, \"button_text\": $json.body.buttonsResponseMessage.message, \"button_response\": $json.body.buttonsResponseMessage.buttonId, \"display_text\": $json.body.buttonsResponseMessage.message } : null }}",
              "type": "object"
            },
            {
              "id": "flags-object",
              "name": "flags",
              "value": "={{ { \"from_me\": $json.body.fromMe, \"is_group\": $json.body.isGroup, \"is_newsletter\": $json.body.isNewsletter, \"is_forwarded\": $json.body.forwarded, \"is_broadcast\": $json.body.broadcast, \"callback_type\": $json.body.type, \"from_api\": $json.body.fromApi, \"is_status_reply\": $json.body.isStatusReply, \"is_edit\": $json.body.isEdit, \"waiting_message\": $json.body.waitingMessage, \"message_expiration_seconds\": $json.body.messageExpirationSeconds || 0 } }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -4256,
        32
      ],
      "id": "6c66340b-80cb-4eb9-98d7-432eb29136af",
      "name": "WhatsApp Message Parser"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "50a91089-2c34-4dd0-8896-2715bd6e9612",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -4480,
        32
      ],
      "id": "c3b7afdf-b1ce-458b-9435-ea38b8fe81ad",
      "name": "Webhook",
      "webhookId": "50a91089-2c34-4dd0-8896-2715bd6e9612"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -3808,
        -32
      ],
      "id": "76562b57-c675-4dc4-87b3-45d21a88710c",
      "name": "Pausa",
      "webhookId": "0bfa0972-a628-48bb-be5d-b3c30b33df0e"
    },
    {
      "parameters": {
        "url": "={{ $json.audio_content.audio_url }}",
        "options": {
          "response": {
            "response": {
              "neverError": true,
              "responseFormat": "file"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3808,
        -224
      ],
      "id": "d7ba6dca-ced4-4607-9fb9-135298ad5bf4",
      "name": "Download Audio File"
    },
    {
      "parameters": {
        "url": "={{ $json.image_content.image_url }}",
        "options": {
          "response": {
            "response": {
              "neverError": true,
              "responseFormat": "file"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3808,
        176
      ],
      "id": "7f380ef1-c018-4e10-bf91-b9f69e79b243",
      "name": "Download Image File"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "# Instrucciones para Descripción de Imagen\nDescribe esta imagen en español.",
        "inputType": "base64",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -3584,
        176
      ],
      "id": "758b2ec3-1ba7-4d9b-9d59-73733f6a124e",
      "name": "Analyze Image",
      "credentials": {
        "openAiApi": {
          "id": "4I5hY4XwoALE8VJS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "button-response-id",
              "name": "button_id",
              "value": "={{ $json.button_content.button_id }}",
              "type": "string"
            },
            {
              "id": "button-response-text",
              "name": "button_text",
              "value": "={{ $json.button_content.button_text || $json.button_content.display_text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3808,
        1136
      ],
      "id": "579bedaf-5978-4e99-9a58-24616a48ffc0",
      "name": "Process Button Response"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.button_id }}",
                    "rightValue": "catalogo",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "catalog-button-condition"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Catalogo"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.button_id }}",
                    "rightValue": "ofertas",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "offers-button-condition"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Ofertas"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.button_id }}",
                    "rightValue": "comprar",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "buy-button-condition"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Comprar"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.button_id }}",
                    "rightValue": "pedido",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "order-button-condition"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Pedido"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ca097790-b652-48d1-8181-c16fcef7a6bd",
                    "leftValue": "={{ ['contra_entrega', 'interrapidisimo'].includes($json.button_id) }}",
                    "rightValue": "contra_entrega",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Contra_Entrega"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0aab0b48-271c-4b6d-85d1-4ae926a7829a",
                    "leftValue": "={{ $json.button_id }}",
                    "rightValue": "transferencia",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Transferencia"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e3943a52-8a51-413b-a5f2-89c394584dc5",
                    "leftValue": "={{ $json.button_id }}",
                    "rightValue": "modificar_pedido",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Modificar_Pedido"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c6c49f16-27fd-4763-bde2-d5b388e27b6f",
                    "leftValue": "={{ $json.button_id }}",
                    "rightValue": "confirmar_pedido",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "confirmar_pedido"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -3584,
        1056
      ],
      "id": "3d24639e-d923-41f5-b958-c0ff0b6b2501",
      "name": "Button Response Router"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {
          "language": "es",
          "temperature": 0
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -3584,
        -224
      ],
      "id": "7a6369f9-42f3-4fee-a1b2-5fc596811cb5",
      "name": "Transcribe a recording",
      "credentials": {
        "openAiApi": {
          "id": "4I5hY4XwoALE8VJS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "23b785c3-f38e-4706-80b7-51f333bba3bd",
              "name": "mensaje",
              "type": "string",
              "value": "={{ $json.text || $json.content || $json.button_text || $json.button_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "2c24d20e-2144-41c9-9132-112d228a9477",
      "name": "Extract Message Content",
      "type": "n8n-nodes-base.set",
      "position": [
        -3360,
        -32
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d4b9efeb-9a68-43e3-bc4c-cd207510bddf",
              "name": "text",
              "value": "={{ $json.text_content.message }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3584,
        -32
      ],
      "id": "03251b8b-de80-4c74-bdf7-e0b1c8ee1999",
      "name": "Obtener Texto"
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('WhatsApp Message Parser').item.json.user.sender_phone }}",
        "messageData": "={{ $json.mensaje }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -3136,
        -32
      ],
      "id": "3e31353a-a069-45b8-a286-d52cbeb8113e",
      "name": "Store Message in Buffer",
      "credentials": {
        "redis": {
          "id": "HBZtjEwzw7Xu4Gm2",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -2912,
        -32
      ],
      "id": "664bc9e4-747b-4c4d-9c81-5c7d453357ef",
      "name": "Wait for Buffer",
      "webhookId": "05929f0b-cb6a-48f9-901e-bbefe359f336"
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('WhatsApp Message Parser').item.json.user.sender_phone }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2688,
        -32
      ],
      "id": "33c9fb31-7cc8-425c-aabd-c3ba9ee9eb99",
      "name": "Retrieve Messages from Buffer",
      "credentials": {
        "redis": {
          "id": "HBZtjEwzw7Xu4Gm2",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "87d5a006-5e35-4dbf-a3dc-e5420b918845",
              "leftValue": "={{ $json.propertyName.last() }}",
              "rightValue": "={{ $('Extract Message Content').item.json.mensaje }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2464,
        -32
      ],
      "id": "6436d151-03b0-442f-9dd4-7b61a405dff9",
      "name": "Check for Duplicate Message"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('WhatsApp Message Parser').item.json.user.sender_phone }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2240,
        -208
      ],
      "id": "02eecf59-515f-4a55-8d1d-b099ebd24f42",
      "name": "Clear Buffer Cache",
      "credentials": {
        "redis": {
          "id": "HBZtjEwzw7Xu4Gm2",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2240,
        -16
      ],
      "id": "78eef7ab-e77c-42fd-bb0e-baf96504f3ff",
      "name": "Skip Duplicate Message"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f6459d32-0468-4e3c-8572-7b36e1fc2172",
              "name": "conversation_content",
              "value": "={{ $json.propertyName.join('\\n') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2016,
        -208
      ],
      "id": "a63d691d-e7d1-4645-aae8-cc9b792d11bd",
      "name": "Format Final Output"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n    '{{ $('WhatsApp Message Parser').item.json.user.sender_phone }}' as session_id,\n    CASE \n        WHEN NOT EXISTS (\n            SELECT 1 \n            FROM n8n_pro_conversation_states \n            WHERE session_id = '{{ $('WhatsApp Message Parser').item.json.user.sender_phone }}'\n        ) THEN false  -- No hay registros, no existe\n        WHEN EXISTS (\n            SELECT 1 \n            FROM n8n_pro_conversation_states \n            WHERE session_id = '{{ $('WhatsApp Message Parser').item.json.user.sender_phone }}'\n            AND ultima_actividad = (\n                SELECT MAX(ultima_actividad) \n                FROM n8n_pro_conversation_states \n                WHERE session_id = '{{ $('WhatsApp Message Parser').item.json.user.sender_phone }}'\n            )\n            AND estado_actual = 'ventas' \n            AND estado_ventas = 'FIN'\n        ) THEN false  -- El más reciente está finalizado, no existe (crear nuevo)\n        ELSE true     -- En cualquier otro caso, existe\n    END as existe",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -1792,
        -208
      ],
      "id": "30f2a101-a172-4227-8805-1f82f81a16b0",
      "name": "Get session_id",
      "credentials": {
        "postgres": {
          "id": "8JM5p3eqNiJuC8uB",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7500bd18-477a-4fbe-b21d-ea6bbcc0a5d5",
              "leftValue": "={{ $json.existe }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1568,
        -208
      ],
      "id": "e327e418-5ed5-4a86-a1c8-623a97d39b78",
      "name": "If"
    },
    {
      "parameters": {
        "jsCode": "// Obtener hora UTC y ajustarla a UTC-5\nconst ahora = new Date();\nconst horaUTC = ahora.getUTCHours();\nconst horaUTC5 = (horaUTC + 24 - 5) % 24;\n\n// Determinar período del día\nlet periodo = '';\n\nif (horaUTC5 >= 5 && horaUTC5 < 12) {\n  periodo = 'mañana';\n} else if (horaUTC5 >= 12 && horaUTC5 < 18) {\n  periodo = 'tarde';\n} else {\n  periodo = 'noche';\n}\n\n// Retornar período junto con datos necesarios\nreturn [\n  {\n    json: {\n      periodo: periodo,\n      hora: horaUTC5,\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3360,
        416
      ],
      "id": "5721fc45-d012-455c-b957-4a44e0753451",
      "name": "Dynamic Time Greeting"
    },
    {
      "parameters": {
        "jsCode": "const saludos = [\n`🌸 ¡Hola! Gracias por escribir a *Ed Perfumería*  \nEstamos encantados de ayudarte a encontrar la fragancia ideal.`,\n\n`💬 ¡Bienvenido a *Ed Perfumería*!  \nGracias por elegirnos para tu próxima compra de perfumes.`,\n\n`🎉 ¡Hola! Qué gusto tenerte en *Ed Perfumería*  \nEstamos aquí para ayudarte a encontrar tu aroma perfecto.`,\n\n`🌟 ¡Gracias por comunicarte con *Ed Perfumería*!  \nNos alegra poder atenderte 😊`,\n\n`🚀 ¡Hola y bienvenido a *Ed Perfumería*!  \nEs un placer atenderte hoy ✨`,\n\n`🙌 ¡Hola! Gracias por escribir a *Ed Perfumería*  \nEstamos encantados de atenderte. 💐`,\n\n`👋 ¡Bienvenid@ a *Ed Perfumería*!  \nNos alegra recibir tu mensaje. 💖`,\n\n`✨ ¡Hola! Gracias por contactar a *Ed Perfumería*  \nNos alegra mucho tenerte por aquí 😊`,\n\n`🌟 ¡Gracias por comunicarte con *Ed Perfumería*!  \nEstamos aquí para ayudarte a encontrar tu fragancia ideal. 🧴✨`,\n\n`🎉 ¡Bienvenido a *Ed Perfumería*!  \nGracias por escribirnos. Estamos listos para asesorarte.`\n];\n\n// Selecciona uno al azar\nconst saludoAleatorio = saludos[Math.floor(Math.random() * saludos.length)];\nreturn [\n  {\n    json: {\n      output: saludoAleatorio\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1344,
        -512
      ],
      "id": "7f3196f5-9ac9-4c8a-b38e-3d70b01a8a27",
      "name": "Dynamic Greeting"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.periodo }}",
                    "rightValue": "mañana",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "eb8f4c83-efd2-4595-b674-25dc1c0ad1b8"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "mañana"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "dcc3cd98-a426-4020-8af1-a851981f2055",
                    "leftValue": "={{ $json.periodo }}",
                    "rightValue": "tarde",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "tarde"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b515e6bc-c3a2-4471-b9ee-ff723e6ff6cc",
                    "leftValue": "={{ $json.periodo }}",
                    "rightValue": "noche",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "noche"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -3136,
        400
      ],
      "id": "7c001fc3-a60e-4937-ae90-458f839f3306",
      "name": "Switch1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E437048CF3D40E574FE2EE02AE98ECC/token/25512E9D7889005341E093C0/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F71f72d577fd94b2995487e18acdaa9ceS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('WhatsApp Message Parser').item.json.user.sender_phone }}"
            },
            {
              "name": "message",
              "value": "={{ $json.output }}"
            },
            {
              "name": "delayTyping",
              "value": "={{ parseInt( $json.output.length() * 25) }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1120,
        -512
      ],
      "id": "04afc96b-9481-4ad1-a1c8-0cb79397b029",
      "name": "Send Dynamic Greeting"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E437048CF3D40E574FE2EE02AE98ECC/token/25512E9D7889005341E093C0/send-button-list",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F71f72d577fd94b2995487e18acdaa9ceS"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"phone\": \"{{ $('WhatsApp Message Parser').item.json.user.sender_phone }}\",\n  \"message\": \"{{ (() => { const h = new Date(new Date().getTime() - 18000000).getHours(); return h >= 5 && h < 12 ? '¡Buenos días!' : h >= 12 && h < 18 ? '¡Buenas tardes!' : '¡Buenas noches!'; })() }} 🌸\\n\\n¿Qué te gustaría hacer?\",\n  \"delayTyping\": 1500,\n  \"buttonList\": {\n    \"buttons\": [\n      {\n        \"id\": \"comprar\",\n        \"label\": \"🛒 Comprar\"\n      },\n      {\n        \"id\": \"catalogo\",\n        \"label\": \"📋 Catálogo\"\n      },\n      {\n        \"id\": \"ofertas\",\n        \"label\": \"🔥 Ofertas\"\n      },\n      {\n        \"id\": \"pedido\",\n        \"label\": \"📦 Consultar Pedido\"\n      }\n    ]\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -896,
        -512
      ],
      "id": "c1a4c0a1-0e2d-46b0-b845-2244ccc18a1f",
      "name": "Send Buttons"
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        -2688,
        448
      ],
      "id": "f537719b-4e0b-4346-a6de-ceea9bc57e2d",
      "name": "Merge Audio"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E437048CF3D40E574FE2EE02AE98ECC/token/25512E9D7889005341E093C0/send-audio",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F71f72d577fd94b2995487e18acdaa9ceS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('WhatsApp Message Parser').item.json.user.sender_phone }}"
            },
            {
              "name": "audio",
              "value": "=data:{{ $('Merge Audio').item.binary.data.mimeType }};base64,{{ $('Merge Audio').item.binary.data.data }}"
            },
            {
              "name": "delayTyping",
              "value": "6"
            },
            {
              "name": "waveform",
              "value": "true"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2464,
        464
      ],
      "id": "84cab140-4535-4ba5-a5e1-d07d317356fe",
      "name": "Send Audio"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E437048CF3D40E574FE2EE02AE98ECC/token/25512E9D7889005341E093C0/send-document/pdf",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F71f72d577fd94b2995487e18acdaa9ceS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('WhatsApp Message Parser').first().json.user.sender_phone }}"
            },
            {
              "name": "document",
              "value": "https://drive.google.com/uc?export=download&id=1z1N-NqCHW2PrC1_HJS01MP6geTL6Jf_S"
            },
            {
              "name": "fileName",
              "value": "Catálogo Ed Perfumería Hombre"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2240,
        464
      ],
      "id": "29466477-e43c-4dec-85f5-931fbcbeb771",
      "name": "Send Catalog Man"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E437048CF3D40E574FE2EE02AE98ECC/token/25512E9D7889005341E093C0/send-document/pdf",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F71f72d577fd94b2995487e18acdaa9ceS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('WhatsApp Message Parser').first().json.user.sender_phone }}"
            },
            {
              "name": "document",
              "value": "https://drive.google.com/uc?export=download&id=1sf7vcqR6USGi-b496e7kCshxMNwI-4c4"
            },
            {
              "name": "fileName",
              "value": "Catálogo Ed Perfumería Mujer"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2016,
        464
      ],
      "id": "ac090481-f306-4875-8c37-36396ac1d988",
      "name": "Send Catalog Women"
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "1UND_G3K4tu_xmjsTOSyq3ypRVpzg95HH",
          "mode": "list",
          "cachedResultName": "Buenos Dias.ogg",
          "cachedResultUrl": "https://drive.google.com/file/d/1UND_G3K4tu_xmjsTOSyq3ypRVpzg95HH/view?usp=drivesdk"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -2912,
        176
      ],
      "id": "a16421cf-e5a1-4d52-9033-5a1109a8ca81",
      "name": "Download Good Morning",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "lZPZd6pI3LpqZuri",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "1oFABnmJkXuevND9TxwJP_zcM2VLsDPtb",
          "mode": "list",
          "cachedResultName": "Buenas Tardes.ogg",
          "cachedResultUrl": "https://drive.google.com/file/d/1oFABnmJkXuevND9TxwJP_zcM2VLsDPtb/view?usp=drivesdk"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -2912,
        368
      ],
      "id": "0050365f-5b62-4e0b-8faf-a9864cf243fe",
      "name": "Download Good Afternoon",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "lZPZd6pI3LpqZuri",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "16PkBRIK-Iv-VKInmhW1nq5Qfjc0EKWn2",
          "mode": "list",
          "cachedResultName": "Buenas Noches.ogg",
          "cachedResultUrl": "https://drive.google.com/file/d/16PkBRIK-Iv-VKInmhW1nq5Qfjc0EKWn2/view?usp=drivesdk"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -2912,
        560
      ],
      "id": "ba923be7-6b27-4e6a-b718-a972323e4962",
      "name": "Download  Good Night",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "lZPZd6pI3LpqZuri",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const ofertas = [\n`🎀 *Promociones especiales de Ed Perfumería*\n\n💎 **Ofertas disponibles:**\n1 unidad → $60.000\n2 unidades → $100.000  \n3 unidades → $120.000\n6 unidades → $210.000\n\n🔥 ¡Fragancias increíbles a precios únicos!`,\n\n`🎁 *Ofertas Ed Perfumería*\n\n✨ **Precios especiales:**\n1 por $60.000\n2 por $100.000\n3 por $120.000\n6 por $210.000\n\n💫 ¡Aprovecha nuestros mejores precios!`,\n\n`💎 *Promoción de la semana*\n\n🔥 **Ofertas vigentes:**\n1 unidad: $60.000\n2 unidades: $100.000\n3 unidades: $120.000\n6 unidades: $210.000\n\n🎉 ¡No dejes pasar estas ofertas!`,\n\n`🌟 *Ofertas especiales*\n\n💥 **Promociones disponibles:**\n1 x $60.000 | 2 x $100.000 | 3 x $120.000 | 6 x $210.000\n\n✨ ¡Solo por tiempo limitado!`,\n\n`🎊 *Ed Perfumería - Ofertas*\n\n🎁 **Precios increíbles:**\n1 fragancia → $60.000\n2 fragancias → $100.000\n3 fragancias → $120.000\n6 fragancias → $210.000\n\n🔥 ¡Te van a encantar!`,\n\n`💖 *Promociones actuales*\n\n🌸 **Ofertas de hoy:**\n1 unidad por $60.000\n2 unidades por $100.000\n3 unidades por $120.000\n6 unidades por $210.000\n\n💎 ¡Aprovecha esta oportunidad!`,\n\n`🚀 *Ofertas Ed Perfumería*\n\n⭐ **Precios especiales:**\n1 → $60.000\n2 → $100.000\n3 → $120.000\n6 → $210.000\n\n🎉 ¡Promociones por tiempo limitado!`,\n\n`🌈 *Promoción especial*\n\n💫 **Ofertas vigentes:**\n1 unidad: $60.000\n2 unidades: $100.000\n3 unidades: $120.000\n6 unidades: $210.000\n\n🔥 ¡No te las pierdas!`,\n\n`🎀 *Ofertas de la semana*\n\n✨ **Precios únicos:**\n1 x $60.000 • 2 x $100.000 • 3 x $120.000 • 6 x $210.000\n\n🎁 ¡Fragancias increíbles a precios especiales!`,\n\n`💝 *Ed Perfumería - Promociones*\n\n🌟 **Ofertas disponibles:**\n1 unidad = $60.000\n2 unidades = $100.000\n3 unidades = $120.000\n6 unidades = $210.000\n\n💎 ¡Aprovecha nuestras mejores ofertas!`\n];\n\n// Selecciona uno al azar\nconst ofertaAleatoria = ofertas[Math.floor(Math.random() * ofertas.length)];\nreturn [\n  {\n    json: {\n      output: ofertaAleatoria\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3360,
        752
      ],
      "id": "52d90029-a5a9-4298-b8eb-a7b942b3b0a8",
      "name": "Dynamic Offers"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E437048CF3D40E574FE2EE02AE98ECC/token/25512E9D7889005341E093C0/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F71f72d577fd94b2995487e18acdaa9ceS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('WhatsApp Message Parser').item.json.user.sender_phone }}"
            },
            {
              "name": "message",
              "value": "={{ $json.output }}"
            },
            {
              "name": "delayTyping",
              "value": "={{ parseInt( $json.output.length() * 25) }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3136,
        752
      ],
      "id": "5e4118c2-f8e4-4048-8847-cb3897bdf836",
      "name": "Send Dynamic Offers"
    },
    {
      "parameters": {
        "jsCode": "const comprar = [\n`🛒 *¡Perfecto! Veamos qué te interesa*\n\n¿En qué fragancia estás pensando?\n- ¿Tienes alguna en mente?\n- ¿Buscas algo específico?\n\n💎 ¡Cuéntanos para ayudarte mejor!`,\n\n`🛍️ *¡Excelente!*\n\n¿Qué tipo de fragancia te llama la atención?\n- ¿Algo dulce o fresco?\n- ¿Para hombre o mujer?\n\n✨ ¡Dinos qué buscas!`,\n\n`🎁 *¡Genial! Hablemos de fragancias*\n\n¿Qué producto te interesa?\n- ¿Tienes marca favorita?\n- ¿Buscas algo nuevo?\n\n🚀 ¡Compártenos tu preferencia!`,\n\n`💳 *¡Listo para ayudarte!*\n\n¿En qué fragancia estás interesado/a?\n- ¿Algo en particular?\n- ¿Necesitas recomendaciones?\n\n🌟 ¡Cuéntanos qué buscas!`,\n\n`🛒 *¡Vamos a encontrar tu fragancia ideal!*\n\n¿Qué tipo de aroma prefieres?\n- ¿Dulce, fresco, amaderado?\n- ¿Para ocasión especial?\n\n💎 ¡Dinos qué te gusta!`,\n\n`🎉 *¡Perfecto! Descubramos tu fragancia*\n\n¿Qué producto tienes en mente?\n- ¿Alguna marca específica?\n- ¿Buscas algo trending?\n\n✨ ¡Comparte tu interés!`,\n\n`🛍️ *¡Excelente elección!*\n\n¿En qué fragancia estás pensando?\n- ¿Algo clásico o moderno?\n- ¿Tienes preferencias?\n\n🔥 ¡Cuéntanos qué buscas!`,\n\n`💝 *¡Hablemos de tu fragancia perfecta!*\n\n¿Qué tipo de aroma te interesa?\n- ¿Para uso diario o especial?\n- ¿Tienes alguna en mente?\n\n🌈 ¡Dinos qué prefieres!`,\n\n`🎊 *¡Genial! Encontremos tu aroma*\n\n¿Qué fragancia te llama la atención?\n- ¿Buscas algo específico?\n- ¿Necesitas sugerencias?\n\n💫 ¡Comparte tu gusto!`,\n\n`🚀 *¡Perfecto! Hablemos de fragancias*\n\n¿En qué producto estás interesado/a?\n- ¿Tienes marca favorita?\n- ¿Algo dulce o fresco?\n\n🎁 ¡Cuéntanos tu preferencia!`\n];\n\n// Selecciona uno al azar\nconst comprarAleatorio = comprar[Math.floor(Math.random() * comprar.length)];\nreturn [\n  {\n    json: {\n      output: comprarAleatorio\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3360,
        944
      ],
      "id": "27c4ab0c-e753-47c9-a37f-8a02f115fd2c",
      "name": "Dynamic Buy"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E437048CF3D40E574FE2EE02AE98ECC/token/25512E9D7889005341E093C0/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F71f72d577fd94b2995487e18acdaa9ceS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('WhatsApp Message Parser').item.json.user.sender_phone }}"
            },
            {
              "name": "message",
              "value": "={{ $json.output }}"
            },
            {
              "name": "delayTyping",
              "value": "={{ parseInt( $json.output.length() * 25) }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3136,
        944
      ],
      "id": "2b963e12-3302-44e9-8890-b664ea2b7465",
      "name": "Send Dynamic Buy"
    },
    {
      "parameters": {
        "jsCode": "const consultarPedido = [\n`📦 *¡Perfecto! Consultemos tu pedido*\n\n¿Qué necesitas saber sobre tu compra?\n- ¿Estado del envío?\n- ¿Número de guía?\n- ¿Tiempo de entrega?\n\n🚚 ¡Estamos aquí para ayudarte!`,\n\n`🔍 *¡Excelente! Revisemos tu orden*\n\n¿Sobre qué quieres consultar?\n- ¿Dónde está mi pedido?\n- ¿Cuándo llega?\n- ¿Datos de envío?\n\n📋 ¡Dinos qué necesitas saber!`,\n\n`📱 *¡Genial! Veamos tu pedido*\n\n¿Qué información necesitas?\n- ¿Estado actual del envío?\n- ¿Número de seguimiento?\n- ¿Fecha estimada de entrega?\n\n✨ ¡Consultemos juntos!`,\n\n`🚛 *¡Listo para ayudarte!*\n\n¿Qué quieres saber de tu compra?\n- ¿Está en camino?\n- ¿Tienes la guía?\n- ¿Algún problema?\n\n🌟 ¡Revisemos tu pedido!`,\n\n`📦 *¡Vamos a consultar tu envío!*\n\n¿Sobre qué necesitas información?\n- ¿Estado del pedido?\n- ¿Seguimiento de envío?\n- ¿Tiempo de llegada?\n\n💎 ¡Estamos para resolver tus dudas!`,\n\n`🔎 *¡Perfecto! Consultemos tu orden*\n\n¿Qué información buscas?\n- ¿Dónde está mi compra?\n- ¿Número de guía?\n- ¿Cuándo llega?\n\n🎉 ¡Revisemos juntos!`,\n\n`📋 *¡Excelente! Veamos tu pedido*\n\n¿Qué necesitas consultar?\n- ¿Estado de envío?\n- ¿Datos de seguimiento?\n- ¿Información de entrega?\n\n🔥 ¡Dinos qué quieres saber!`,\n\n`🚚 *¡Consultemos tu compra!*\n\n¿Sobre qué tienes dudas?\n- ¿Mi pedido ya salió?\n- ¿Cuál es mi guía?\n- ¿Cuándo llega?\n\n🌈 ¡Estamos para ayudarte!`,\n\n`📱 *¡Genial! Revisemos tu envío*\n\n¿Qué información necesitas?\n- ¿Estado actual?\n- ¿Número de seguimiento?\n- ¿Fecha de entrega?\n\n💫 ¡Consultemos tu pedido!`,\n\n`🔍 *¡Perfecto! Veamos tu orden*\n\n¿Qué quieres saber?\n- ¿Dónde está mi pedido?\n- ¿Guía de envío?\n- ¿Tiempo estimado?\n\n🎁 ¡Resolvamos tus dudas!`\n];\n\n// Selecciona uno al azar\nconst consultarPedidoAleatorio = consultarPedido[Math.floor(Math.random() * consultarPedido.length)];\nreturn [\n  {\n    json: {\n      output: consultarPedidoAleatorio\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3360,
        1136
      ],
      "id": "11283ab7-f089-45b2-a311-0804dddf90d2",
      "name": "Dynamic Order"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E437048CF3D40E574FE2EE02AE98ECC/token/25512E9D7889005341E093C0/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F71f72d577fd94b2995487e18acdaa9ceS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('WhatsApp Message Parser').item.json.user.sender_phone }}"
            },
            {
              "name": "message",
              "value": "={{ $json.output }}"
            },
            {
              "name": "delayTyping",
              "value": "={{ parseInt( $json.output.length() * 25) }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3136,
        1136
      ],
      "id": "92bf365d-4bc5-41ad-8607-41a7a33f7ba4",
      "name": "Send Dynamic Order"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT actualizar_estado_principal_pro('{{ $('WhatsApp Message Parser').item.json.user.sender_phone }}', 'SALUDO');",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -672,
        -512
      ],
      "id": "b42079e3-7516-455f-b014-11ff11e98f97",
      "name": "Execute Status Greeting",
      "credentials": {
        "postgres": {
          "id": "8JM5p3eqNiJuC8uB",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT actualizar_estado_principal_pro('{{ $('WhatsApp Message Parser').first().json.user.sender_phone }}', 'CATALOGO');",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -1792,
        464
      ],
      "id": "427cde13-0e22-4605-b83f-950b15931683",
      "name": "Execute Status Catalog",
      "credentials": {
        "postgres": {
          "id": "8JM5p3eqNiJuC8uB",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT actualizar_estado_principal_pro('{{ $('WhatsApp Message Parser').item.json.user.sender_phone }}', 'OFERTAS');",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -2912,
        752
      ],
      "id": "92f8558e-317b-459f-8692-f17e31aeccf4",
      "name": "Execute Status Offers",
      "credentials": {
        "postgres": {
          "id": "8JM5p3eqNiJuC8uB",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT actualizar_estado_principal_pro('{{ $('WhatsApp Message Parser').item.json.user.sender_phone }}', 'VENTAS');",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -2912,
        944
      ],
      "id": "96bcf92d-bb97-4015-bcfe-c4e7a46277ae",
      "name": "Execute Status Buy",
      "credentials": {
        "postgres": {
          "id": "8JM5p3eqNiJuC8uB",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT actualizar_estado_principal_pro('{{ $('WhatsApp Message Parser').item.json.user.sender_phone }}', 'SOPORTE');",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -2912,
        1136
      ],
      "id": "55af33b0-11b5-4beb-b5e9-cfb7365f11c4",
      "name": "Execute Status Order",
      "credentials": {
        "postgres": {
          "id": "8JM5p3eqNiJuC8uB",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.estado }}",
                    "rightValue": "VENTAS",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "ventas-condition"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "sales"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.estado }}",
                    "rightValue": "SOPORTE",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "soporte-condition"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "order"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1120,
        -112
      ],
      "id": "afb40f5e-0e1d-44f8-8ec8-45f0cc0b12cd",
      "name": "Status Response IA"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -896,
        16
      ],
      "id": "d0d7441b-b596-4a59-ac58-25ccac9beb66",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "inputText": "={{ $('Format Final Output').item.json.conversation_content }}",
        "categories": {
          "categories": [
            {
              "category": "COMPRA_DIRECTA",
              "description": "Cliente manifiesta voluntad definitiva de adquirir productos específicos, solicita procesos de venta, cotizaciones totales, o confirma decisiones de compra. Incluye expresiones de compra inmediata, solicitudes de cálculo de totales, procesos de pago, datos de contacto para ventas, y confirmaciones directas."
            },
            {
              "category": "CONSULTA_INVENTARIO",
              "description": "Cliente busca información específica sobre productos individuales sin expresar intención de compra ni solicitar ayuda para elegir. Incluye consultas sobre precios unitarios, disponibilidad de stock, características técnicas, especificaciones del producto, contenido, originalidad, y verificación de existencias."
            },
            {
              "category": "SOLICITUD_RECOMENDACION",
              "description": "Cliente busca consejo personalizado, sugerencias adaptadas a sus necesidades, ayuda para tomar decisiones de compra, o recomendaciones basadas en ocasiones, gustos, presupuesto o preferencias específicas. El cliente delega la decisión al vendedor o busca orientación experta."
            },
            {
              "category": "COMPARACION_PRODUCTOS",
              "description": "Cliente solicita análisis objetivo de diferencias, similitudes, ventajas y desventajas entre productos específicos ya identificados. Busca información comparativa técnica sin necesariamente pedir ayuda para decidir, sino datos para evaluar opciones por sí mismo."
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "typeVersion": 1.1,
      "position": [
        -448,
        32
      ],
      "id": "84fafcda-aae6-4209-bc06-832312d2ac03",
      "name": "Text Classifier"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -352,
        320
      ],
      "id": "a4acdab6-12e5-4571-aaf1-b0eec621948c",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "4I5hY4XwoALE8VJS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "4HlRidEr8jDW0Zan",
          "mode": "list",
          "cachedResultName": "My Sub Product Comparator Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "query": "={{ $('Format Final Output').item.json.conversation_content }}",
            "sessionId": "={{ $('WhatsApp Message Parser').item.json.user.sender_phone }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "query",
              "displayName": "Query",
              "required": true,
              "type": "string",
              "description": "The user query to process"
            },
            {
              "id": "sessionId",
              "displayName": "Session ID",
              "required": true,
              "type": "string",
              "description": "Session identifier for chat memory (sender phone number)"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -48,
        320
      ],
      "id": "a47b6bfc-e01e-45f2-8186-151616066184",
      "name": "COMPARACION"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "8xMoAwEO7wUKJTXi",
          "mode": "list",
          "cachedResultName": "My Sub Recommendation Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "query": "={{ $('Format Final Output').item.json.conversation_content }}",
            "sessionId": "={{ $('WhatsApp Message Parser').item.json.user.sender_phone }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "query",
              "displayName": "Query",
              "required": true,
              "type": "string",
              "description": "The user query to process"
            },
            {
              "id": "sessionId",
              "displayName": "Session ID",
              "required": true,
              "type": "string",
              "description": "Session identifier for chat memory (sender phone number)"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -48,
        128
      ],
      "id": "54c4321a-e223-4fcf-86cb-0b7af40aa747",
      "name": "RECOMENDACION"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "Tk1Yk7Bhqs7KvV9o",
          "mode": "list",
          "cachedResultName": "My Sub Sales Specialist Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "query": "={{ $('Format Final Output').item.json.conversation_content }}",
            "sessionId": "={{ $('WhatsApp Message Parser').item.json.user.sender_phone }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "query",
              "displayName": "Query",
              "required": true,
              "type": "string",
              "description": "The user query to process"
            },
            {
              "id": "sessionId",
              "displayName": "Session ID",
              "required": true,
              "type": "string",
              "description": "Session identifier for chat memory (sender phone number)"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -48,
        -304
      ],
      "id": "77172e3a-4760-430b-9db9-0ad9bf5fdef5",
      "name": "COMPRA"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "l0HpKncxwOEcFy8h",
          "mode": "list",
          "cachedResultName": "My Sub Inventory Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "query": "={{ $('Format Final Output').item.json.conversation_content }}",
            "sessionId": "={{ $('WhatsApp Message Parser').item.json.user.sender_phone }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "query",
              "displayName": "Query",
              "required": true,
              "type": "string",
              "description": "The user query to process"
            },
            {
              "id": "sessionId",
              "displayName": "Session ID",
              "required": true,
              "type": "string",
              "description": "Session identifier for chat memory (sender phone number)"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -48,
        -64
      ],
      "id": "c242de69-dd46-4e70-bf25-3292602df83b",
      "name": "INVENTARIO"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "df7a03b3-03fc-4afa-a80a-c622687316f2",
              "leftValue": "={{ $json.estado_ventas }}",
              "rightValue": "=ESPERANDO",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "27a3251e-1e79-4459-ae35-dcbc2570064d",
              "leftValue": "={{ $json.estado_ventas }}",
              "rightValue": "LISTO",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "407ed461-7e17-4638-a2bf-7da0f1fc9d25",
              "leftValue": "={{ $json.estado_ventas }}",
              "rightValue": "FIN",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -672,
        -112
      ],
      "id": "3f481f72-4f7e-430a-bc4e-2ac5059e6999",
      "name": "If1"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "ROJE11JYihvwJXvW",
          "mode": "list",
          "cachedResultName": "My Sub-Contra_Entrega"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "sessionId": "={{ $('WhatsApp Message Parser').item.json.user.sender_phone }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "sessionId",
              "displayName": "Session ID",
              "required": true,
              "type": "string",
              "description": "Session identifier for chat memory (sender phone number)"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -3360,
        1328
      ],
      "id": "b10719ae-2f72-4257-a680-30c16141632e",
      "name": "Contra_Entrega"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "gE4JF3Lu1bpd66K6",
          "mode": "list",
          "cachedResultName": "My Sub-Transferencia"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -3360,
        1520
      ],
      "id": "af981f5e-952e-405a-a7d5-aeb343edf65c",
      "name": "Transferencia"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "Tk1Yk7Bhqs7KvV9o",
          "mode": "list",
          "cachedResultName": "My Sub Sales Specialist Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -3360,
        1712
      ],
      "id": "7e3fd392-4f0e-4b63-84b4-2e8583919531",
      "name": "Modificar_Pedido"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.estado_ventas }}",
                    "rightValue": "RECOLECTANDO",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "3e6fe2c2-595d-430e-8c1a-84645d16f022"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "RECOLECTANDO"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "97d8f253-f9a1-44a3-a541-c674b5d11535",
                    "leftValue": "={{ $json.estado_ventas }}",
                    "rightValue": "ESPERANDO",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "ESPERANDO"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "04ef01b1-f32f-49ce-9e76-1fb09e162083",
                    "leftValue": "={{ $json.estado_ventas }}",
                    "rightValue": "LISTO",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "LISTO"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -896,
        -240
      ],
      "id": "58d6085c-e0ca-41b7-85b5-8bd7e51864e5",
      "name": "Switch"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "WVmEpKVLhRNt0mTP",
          "mode": "list",
          "cachedResultName": "My Sub-Validator-Data"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "sessionId": "={{ $('WhatsApp Message Parser').item.json.user.sender_phone }}",
            "message": "={{ $('Format Final Output').item.json.conversation_content }}"
          },
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -672,
        -304
      ],
      "id": "72350bb3-a759-45a6-bd36-cabe841928fd",
      "name": "VALIDATOR DATA"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT * FROM obtener_estado_pro('573011284297');",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -1344,
        -96
      ],
      "id": "2dde2b54-057a-45bd-b8a5-a49b0a162b50",
      "name": "Get Data User",
      "credentials": {
        "postgres": {
          "id": "8JM5p3eqNiJuC8uB",
          "name": "Postgres account"
        }
      }
    }
  ],
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "n8n.srv895922.hstgr.cloud",
            "user-agent": "Mozilla/5.0 (iPhone; CPU iPhone OS 16_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/111.0.5563.101 Mobile/15E148 Safari/604.1",
            "content-length": "879",
            "content-type": "application/json",
            "origin": "https://api.z-api.io",
            "server": "Z-API",
            "x-forwarded-for": "146.235.56.142",
            "x-forwarded-host": "n8n.srv895922.hstgr.cloud",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "22c5bda17b34",
            "x-real-ip": "146.235.56.142",
            "z-api-token": "25512E9D7889005341E093C0",
            "accept-encoding": "gzip"
          },
          "params": {},
          "query": {},
          "body": {
            "isStatusReply": false,
            "chatLid": "33501416050920@lid",
            "connectedPhone": "573194651229",
            "waitingMessage": false,
            "isEdit": false,
            "isGroup": false,
            "isNewsletter": false,
            "instanceId": "3E437048CF3D40E574FE2EE02AE98ECC",
            "messageId": "30886929DE42A2C84D1EFED3602914DD",
            "phone": "573011284297",
            "fromMe": false,
            "momment": 1752983476000,
            "status": "RECEIVED",
            "chatName": "Sergio R.",
            "senderPhoto": null,
            "senderName": "Sergio R.",
            "photo": "https://pps.whatsapp.net/v/t61.24694-24/518949464_1473845160724464_1356829479899435347_n.jpg?ccb=11-4&oh=01_Q5Aa2AFE8xnNoYBfTBHwu3_ar_9oxQ7cnR2ITo_IwLhQQV5oIA&oe=68897B4E&_nc_sid=5e03e0&_nc_cat=108",
            "broadcast": false,
            "participantLid": null,
            "referenceMessageId": "3EB0D5CB8EF99BAC466005",
            "messageExpirationSeconds": 0,
            "forwarded": false,
            "type": "ReceivedCallback",
            "fromApi": false,
            "buttonsResponseMessage": {
              "buttonId": "confirmar_pedido",
              "message": "🎉 CONFIRMAR PEDIDO"
            }
          },
          "webhookUrl": "https://n8n.srv895922.hstgr.cloud/webhook/50a91089-2c34-4dd0-8896-2715bd6e9612",
          "executionMode": "production"
        }
      }
    ]
  },
  "connections": {
    "WhatsApp Message Parser": {
      "main": [
        [
          {
            "node": "Message Type Router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "WhatsApp Message Parser",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message Type Router": {
      "main": [
        [
          {
            "node": "Download Audio File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Pausa",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download Image File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Process Button Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Audio File": {
      "main": [
        [
          {
            "node": "Transcribe a recording",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Image File": {
      "main": [
        [
          {
            "node": "Analyze Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pausa": {
      "main": [
        [
          {
            "node": "Obtener Texto",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe a recording": {
      "main": [
        [
          {
            "node": "Extract Message Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze Image": {
      "main": [
        [
          {
            "node": "Extract Message Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Button Response": {
      "main": [
        [
          {
            "node": "Button Response Router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Button Response Router": {
      "main": [
        [
          {
            "node": "Dynamic Time Greeting",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Dynamic Offers",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Dynamic Buy",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Dynamic Order",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Contra_Entrega",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Transferencia",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Modificar_Pedido",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Obtener Texto": {
      "main": [
        [
          {
            "node": "Extract Message Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Message Content": {
      "main": [
        [
          {
            "node": "Store Message in Buffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Store Message in Buffer": {
      "main": [
        [
          {
            "node": "Wait for Buffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for Buffer": {
      "main": [
        [
          {
            "node": "Retrieve Messages from Buffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retrieve Messages from Buffer": {
      "main": [
        [
          {
            "node": "Check for Duplicate Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check for Duplicate Message": {
      "main": [
        [
          {
            "node": "Clear Buffer Cache",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Skip Duplicate Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clear Buffer Cache": {
      "main": [
        [
          {
            "node": "Format Final Output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Final Output": {
      "main": [
        [
          {
            "node": "Get session_id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get session_id": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Dynamic Greeting",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Data User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dynamic Greeting": {
      "main": [
        [
          {
            "node": "Send Dynamic Greeting",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dynamic Time Greeting": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Download Good Morning",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download Good Afternoon",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download  Good Night",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Dynamic Greeting": {
      "main": [
        [
          {
            "node": "Send Buttons",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Audio": {
      "main": [
        [
          {
            "node": "Send Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Audio": {
      "main": [
        [
          {
            "node": "Send Catalog Man",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Catalog Man": {
      "main": [
        [
          {
            "node": "Send Catalog Women",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Good Morning": {
      "main": [
        [
          {
            "node": "Merge Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Good Afternoon": {
      "main": [
        [
          {
            "node": "Merge Audio",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Download  Good Night": {
      "main": [
        [
          {
            "node": "Merge Audio",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Dynamic Offers": {
      "main": [
        [
          {
            "node": "Send Dynamic Offers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dynamic Buy": {
      "main": [
        [
          {
            "node": "Send Dynamic Buy",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dynamic Order": {
      "main": [
        [
          {
            "node": "Send Dynamic Order",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Buttons": {
      "main": [
        [
          {
            "node": "Execute Status Greeting",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Catalog Women": {
      "main": [
        [
          {
            "node": "Execute Status Catalog",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Dynamic Offers": {
      "main": [
        [
          {
            "node": "Execute Status Offers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Dynamic Buy": {
      "main": [
        [
          {
            "node": "Execute Status Buy",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Dynamic Order": {
      "main": [
        [
          {
            "node": "Execute Status Order",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Status Response IA": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Text Classifier",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Text Classifier": {
      "main": [
        [
          {
            "node": "COMPRA",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "INVENTARIO",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "RECOMENDACION",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "COMPARACION",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "COMPRA",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Text Classifier",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "VALIDATOR DATA",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "VALIDATOR DATA",
            "type": "main",
            "index": 0
          }
        ],
        [],
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Data User": {
      "main": [
        [
          {
            "node": "Status Response IA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "098829fe-0c9c-4765-8cf9-95d2084bb86c",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "9b741fad69cc6219b90142a4f3a46a45de0510680dd2fdf57a5402cd3a1e0176"
  },
  "id": "NARCxPg3jEuCsBaJ",
  "tags": []
}