{
  "name": "My Sub-Validator-Data",
  "nodes": [
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "id": "26853136-7e33-47c4-8f1d-c234864bfba6",
      "typeVersion": 1.1,
      "name": "Validator Data",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        -2016,
        -96
      ]
    },
    {
      "parameters": {
        "contextWindowLength": 12
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -1664,
        128
      ],
      "id": "e94c07cb-5e94-42c1-9fa6-cacae252eff4",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "8JM5p3eqNiJuC8uB",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=# AGENTE VALIDADOR DE DATOS DE CLIENTE\n\nAnaliza y consolida datos de entrega del cliente evitando solicitar informaci√≥n duplicada.\n\n**DATOS REQUERIDOS:**\n- üë§ Nombre completo (2+ palabras)\n- üìû Tel√©fono (10 d√≠gitos)  \n- üìç Direcci√≥n completa (con n√∫meros)\n- üèôÔ∏è Ciudad\n\n**FUENTES DE DATOS:**\n\n1. **Mensaje actual:** {{ $json.message }}\n\n2. **Sistema:**\n   - Nombre: {{ $json.nombre_cliente }}\n   - Tel√©fono: {{ $json.telefono }}\n   - Direcci√≥n: {{ $json.direccion }}\n   - Ciudad: {{ $json.ciudad }}\n   - Correo: {{ $json.email }}\n\n3. **Historial:** Revisa Postgres Chat Memory para datos enviados anteriormente\n\n**Pedido:** {{ $json.productos_info }} | Total: ${{ $json.total_producto }} + ${{ $json.total_envio }} | Pago: {{ $json.pago }}\n\n## PROCESO\n\n1. **CONSOLIDAR:** Toma el primer valor v√°lido de: Sistema ‚Üí Mensaje ‚Üí Historial\n2. **VALIDAR:** Verifica que no sea null/vac√≠o y cumpla formato b√°sico  \n3. **RESPONDER:** Seg√∫n completitud de datos\n\n**Si TODOS los datos est√°n completos:**\n```\n‚úÖ ¬°Perfecto! Tengo todos tus datos.\n\nüìã RESUMEN:\nüë§ [NOMBRE] | üìû [TEL√âFONO] \nüìç [DIRECCI√ìN] | üèôÔ∏è [CIUDAD]\nüí∞ Total: $[TOTAL] | üöö [PAGO]\n\n¬°Procederemos con tu pedido!\n```\n\n**Si faltan datos:**\n- **Cliente frustrado** (\"ya los envi√©\"): Mostrar empat√≠a + datos confirmados + solicitar faltantes\n- **Mensaje normal:** Solicitar TODOS los faltantes en un solo mensaje con ejemplo\n\n**Plantilla para datos faltantes:**\n```\nPara completar tu pedido necesito:\n[LISTA_DATOS_FALTANTES]\n\n‚ö†Ô∏è **IMPORTANTE:** Env√≠a TODOS en un solo mensaje.\n\nEjemplo: \"[EJEMPLO_DIN√ÅMICO]\"\n\n¬øPuedes enviarlos? üòä\n```\n\n**RESPONDE SOLO CON ESTE JSON:**\n\n```json\n{\n  \"output\": \"mensaje personalizado seg√∫n estado\",\n  \"datosConfirmados\": true/false,\n  \"status\": \"ESPERANDO\" | \"LISTO\",\n  \"clienteInfo\": {\n    \"nombre\": \"valor_final_o_null\",\n    \"telefono\": \"valor_final_o_null\",\n    \"direccion\": \"valor_final_o_null\", \n    \"ciudad\": \"valor_final_o_null\",\n    \"metodoPago\": \"{{ $json.pago }}\",\n    \"correo\": \"valor_final_o_null\"\n  },\n  \"pedidoInfo\": {\n    \"productos\": {{ $json.productos_info }},\n    \"cantidad_total\": {{ $json.cantidad_total }},\n    \"total_producto\": {{ $json.total_producto }},\n    \"total_envio\": {{ $json.total_envio }},\n    \"total\": {{ $json.total_producto }} + {{ $json.total_envio }}\n  }\n}\n```\n\n**REGLAS CR√çTICAS:**\n- ‚ùå NUNCA pedir datos que YA tienes v√°lidos \n- ‚úÖ SIEMPRE revisar las 3 fuentes antes de solicitar\n- ‚úÖ Si cliente se frustra, mostrar empat√≠a y datos confirmados\n- ‚úÖ Pedir datos faltantes en un solo mensaje con ejemplo",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        -1696,
        -96
      ],
      "id": "44bdea21-f835-41c1-85b1-91dfa07221de",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {
          "frequencyPenalty": 0,
          "maxTokens": 2000,
          "presencePenalty": 0,
          "temperature": 0.1,
          "maxRetries": 3,
          "topP": 1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1792,
        128
      ],
      "id": "4aab9264-3c11-4bc9-847b-f8cc544e0b17",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "4I5hY4XwoALE8VJS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserAutofixing",
      "typeVersion": 1,
      "position": [
        -1408,
        128
      ],
      "id": "f62a48fe-6725-44a0-9021-777be5e5527d",
      "name": "Auto-fixing Output Parser"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1376,
        336
      ],
      "id": "f8d9c588-c497-427b-848e-24aa178477b0",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "4I5hY4XwoALE8VJS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"output\": {\n      \"type\": \"string\",\n      \"description\": \"Mensaje final que se enviar√° al cliente\"\n    },\n    \"datosConfirmados\": {\n      \"type\": \"boolean\",\n      \"description\": \"Indica si todos los datos del cliente est√°n completos y confirmados\"\n    },\n    \"status\": {\n      \"type\": \"string\",\n      \"enum\": [\"COTIZANDO\", \"LISTO\", \"ESPERANDO\", \"RECOLECTANDO\", \"FIN\"],\n      \"description\": \"Estado actual del proceso de venta\"\n    },\n    \"clienteInfo\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"nombre\": {\n          \"type\": [\"string\", \"null\"],\n          \"description\": \"Nombre completo del cliente\"\n        },\n        \"telefono\": {\n          \"type\": [\"string\", \"null\"],\n          \"description\": \"N√∫mero de tel√©fono del cliente\"\n        },\n        \"direccion\": {\n          \"type\": [\"string\", \"null\"],\n          \"description\": \"Direcci√≥n completa con todos los detalles de entrega\"\n        },\n        \"ciudad\": {\n          \"type\": [\"string\", \"null\"],\n          \"description\": \"Ciudad de destino para la entrega\"\n        },\n        \"metodoPago\": {\n          \"type\": [\"string\", \"null\"],\n          \"enum\": [\"TRANSFERENCIA\", \"CONTRA ENTREGA\", \"INTERRAPID√çSIMO\", null],\n          \"description\": \"M√©todo de pago seleccionado por el cliente\"\n        },\n        \"correo\": {\n          \"type\": [\"string\", \"null\"],\n          \"description\": \"Email del cliente (opcional)\"\n        }\n      },\n      \"required\": [\"nombre\", \"telefono\", \"direccion\", \"ciudad\", \"metodoPago\", \"correo\"],\n      \"description\": \"Informaci√≥n personal del cliente\"\n    },\n    \"pedidoInfo\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"productos\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"nombre\": {\n                \"type\": \"string\",\n                \"description\": \"Nombre del producto/perfume\"\n              },\n              \"cantidad\": {\n                \"type\": \"integer\",\n                \"minimum\": 1,\n                \"description\": \"Cantidad del producto\"\n              },\n              \"precio\": {\n                \"type\": \"number\",\n                \"minimum\": 0,\n                \"description\": \"Precio unitario del producto\"\n              },\n              \"total\": {\n                \"type\": \"number\",\n                \"minimum\": 0,\n                \"description\": \"Total por este producto (cantidad √ó precio)\"\n              }\n            },\n            \"required\": [\"nombre\", \"cantidad\", \"precio\", \"total\"]\n          },\n          \"description\": \"Lista de productos en el pedido\"\n        },\n        \"cantidad_total\": {\n          \"type\": \"integer\",\n          \"minimum\": 0,\n          \"description\": \"Cantidad total de productos en el pedido\"\n        },\n        \"total_producto\": {\n          \"type\": \"number\",\n          \"minimum\": 0,\n          \"description\": \"Total de todos los productos sin incluir env√≠o\"\n        },\n        \"total_envio\": {\n          \"type\": \"number\",\n          \"minimum\": 0,\n          \"description\": \"Costo total del env√≠o\"\n        },\n        \"total\": {\n          \"type\": \"number\",\n          \"minimum\": 0,\n          \"description\": \"Total final del pedido (total_producto + total_envio)\"\n        }\n      },\n      \"required\": [\"productos\", \"cantidad_total\", \"total_producto\", \"total_envio\", \"total\"],\n      \"description\": \"Informaci√≥n completa del pedido y productos\"\n    }\n  },\n  \"required\": [\"output\", \"datosConfirmados\", \"status\", \"clienteInfo\", \"pedidoInfo\"]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        -1248,
        336
      ],
      "id": "514b6c29-176d-4a53-959a-2931e43414d2",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        -1536,
        128
      ],
      "id": "40669a39-cdee-41d5-9859-447263993ddb",
      "name": "Calculator"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e45e034a-2a09-480a-8190-51616030c985",
              "leftValue": "={{ $json.output.datosConfirmados }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1008,
        -96
      ],
      "id": "1883bdeb-f87f-47df-901c-8faba5634a0f",
      "name": "If"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E437048CF3D40E574FE2EE02AE98ECC/token/25512E9D7889005341E093C0/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F71f72d577fd94b2995487e18acdaa9ceS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Validator Data').first().json.sessionId }}"
            },
            {
              "name": "message",
              "value": "={{ $json.output.output }}"
            },
            {
              "name": "delayTyping",
              "value": "={{ parseInt( $json.output.output.length() * 25) }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -784,
        0
      ],
      "id": "36734a91-a37d-4c2b-af82-b765b4b5a99f",
      "name": "Send Dynamic Greeting"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT actualizar_estado_ventas_principal_pro('{{ $('Validator Data').first().json.sessionId }}', 'ESPERANDO');\nSELECT actualizar_datos_cliente_pro('{{ $('Validator Data').first().json.sessionId }}', '{{ JSON.stringify($('AI Agent').first().json.output.clienteInfo) }}');",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -560,
        0
      ],
      "id": "68526d0a-24e7-43a0-ab63-61cf53cead47",
      "name": "Execute a SQL query",
      "credentials": {
        "postgres": {
          "id": "8JM5p3eqNiJuC8uB",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT actualizar_estado_ventas_principal_pro('{{ $('Validator Data').first().json.sessionId }}', 'LISTO');\nSELECT actualizar_datos_cliente_pro('{{ $('Validator Data').first().json.sessionId }}', '{{ JSON.stringify($('AI Agent').first().json.output.clienteInfo) }}');",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -784,
        -192
      ],
      "id": "878a260b-2440-4a3c-9bdf-7475f2ee7802",
      "name": "Update Data Client Status",
      "credentials": {
        "postgres": {
          "id": "8JM5p3eqNiJuC8uB",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// FORMATO ALEGRE PERSONALIZADO - Combinando lo mejor del 2 y 4\n// Script para n8n - Versi√≥n alegre, termina en total a pagar\n\nconst clienteInfo = $('AI Agent').first().json.output.clienteInfo;\nconst pedidoInfo = $('AI Agent').first().json.output.pedidoInfo;\n\nfunction formatearPrecio(precio) {\n  return new Intl.NumberFormat('es-CO').format(precio);\n}\n\n// Lista alegre de productos\nlet productosTexto = '';\npedidoInfo.productos.forEach((producto, index) => {\n  const precioFormat = formatearPrecio(producto.precio);\n  const totalFormat = formatearPrecio(producto.total);\n  productosTexto += `${index + 1}. *${producto.nombre}*\n   ${producto.cantidad} unidades √ó $${precioFormat} = $${totalFormat}\n\n`;\n});\n\nconst envioFormat = formatearPrecio(pedidoInfo.total_envio);\nconst totalFormat = formatearPrecio(pedidoInfo.total);\nconst correoTexto = clienteInfo.correo ? `üìß ${clienteInfo.correo}\\n` : '';\n\nconst mensajeConfirmacion = `üìã *Revisa tu pedido antes de confirmar*\n\n*üè† INFORMACI√ìN DE ENTREGA*\nüë§ ${clienteInfo.nombre}\nüìû ${clienteInfo.telefono}\nüìç ${clienteInfo.direccion}, ${clienteInfo.ciudad}\n${correoTexto}\n*üõçÔ∏è LO QUE ELEGISTE*\n\n${productosTexto}*üí≥ DETALLES DE PAGO*\nM√©todo: ${clienteInfo.metodoPago}\nüöö Env√≠o: $${envioFormat}\n\n*üí∞ TOTAL A PAGAR: $${totalFormat}*`;\n\nreturn {\n  json: {\n    mensaje_confirmacion: mensajeConfirmacion,\n    status: \"LISTO\",\n    datos_cliente: clienteInfo,\n    datos_pedido: pedidoInfo,\n    total_formateado: \"$\" + totalFormat\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -560,
        -192
      ],
      "id": "81a9e24d-a3f0-48fb-92f9-2e216c242b99",
      "name": "Code"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E437048CF3D40E574FE2EE02AE98ECC/token/25512E9D7889005341E093C0/send-button-list",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F71f72d577fd94b2995487e18acdaa9ceS"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"phone\": \"{{ $('Validator Data').first().json.sessionId }}\",\n  \"message\": {{ JSON.stringify($json.mensaje_confirmacion) }},\n  \"delayTyping\": 2,\n  \"buttonList\": {\n    \"buttons\": [\n      {\n        \"id\": \"confirmar_pedido\",\n        \"label\": \"üéâ CONFIRMAR PEDIDO\"\n      },\n      {\n        \"id\": \"modificar_pedido\",\n        \"label\": \"‚úèÔ∏è Modificar pedido\"\n      }\n    ]\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -336,
        -192
      ],
      "id": "1839ec3d-7c9e-44f1-8251-9473c0bf523e",
      "name": "Send Buttons1"
    }
  ],
  "pinData": {
    "Validator Data": [
      {
        "json": {
          "id": 4,
          "session_id": "573011284297",
          "estado": "VENTAS",
          "estado_ventas": "ESPERANDO",
          "fecha_inicio": "2025-07-20T04:43:38.236Z",
          "ultima_actividad": "2025-07-20T04:51:48.794Z",
          "nombre_cliente": null,
          "ciudad": "Medell√≠n",
          "telefono": "3194651229",
          "direccion": null,
          "email": null,
          "guia": null,
          "pago": "CONTRA ENTREGA",
          "total_producto": 700000,
          "total_envio": 24900,
          "cantidad_total": 20,
          "productos_info": [
            {
              "total": 700000,
              "nombre": "LOVE LOVE",
              "precio": 35000,
              "cantidad": 20
            }
          ],
          "conversacion_activa": true,
          "sessionId": "573011284297",
          "message": "Cl. 7 Sur #50GG-13, Guayabal, Medell√≠n"
        }
      }
    ]
  },
  "connections": {
    "Validator Data": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Auto-fixing Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Calculator": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Update Data Client Status",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Dynamic Greeting",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Dynamic Greeting": {
      "main": [
        [
          {
            "node": "Execute a SQL query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Data Client Status": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Send Buttons1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "05d64175-b62a-4362-bb49-2c7d44540a7f",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "9b741fad69cc6219b90142a4f3a46a45de0510680dd2fdf57a5402cd3a1e0176"
  },
  "id": "WVmEpKVLhRNt0mTP",
  "tags": []
}